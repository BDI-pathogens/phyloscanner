pkgdown::build_site()
setwd("~/phyloscanner/TransSubpopulation/vignettes")
library(TransSubpopulation)
dobs
library(data.table)
library(gtools)
library(TransSubpopulation)
# library(TransSubpopulation)
set.seed(42)
num.inf.1<-2000
num.inf.2<-2500
ds<-data.table(COMM_NUM_B=c(rep(1,num.inf.1),rep(2,num.inf.2)),INF=rep(1,num.inf.1+num.inf.2))
num.f.1<-round(num.inf.1*0.7)
num.m.1<-num.inf.1-round(num.inf.1*0.7)
num.f.2<-round(num.inf.2*0.6)
num.m.2<-num.inf.2-round(num.inf.2*0.6)
ds$SEX<-c(rep('F',num.f.1),
rep('M',num.m.1),
rep('F',num.f.2),
rep('M',num.m.2))
ds$AGE_AT_MID_C<-c(rep('15-24',round(num.f.1*0.25)),
rep('25-34',round(num.f.1*0.6)),
rep('35+',num.f.1-round(num.f.1*0.25)-round(num.f.1*0.6)),
rep('15-24',round(num.m.1*0.2)),
rep('25-34',round(num.m.1*0.5)),
rep('35+',num.m.1-round(num.m.1*0.2)-round(num.m.1*0.5)),
rep('15-24',round(num.f.2*0.25)),
rep('25-34',round(num.f.2*0.5)),
rep('35+',num.f.2-round(num.f.2*0.25)-round(num.f.2*0.5)),
rep('15-24',round(num.m.2*0.2)),
rep('25-34',round(num.m.2*0.4)),
rep('35+',num.m.2-round(num.m.2*0.2)-round(num.m.2*0.4))
)
ds		<- ds[, list(TRIAL=length(INF)),by=c('AGE_AT_MID_C','SEX','COMM_NUM_B')]
comm<-c(0.5,-0.5)
a<-0.4
male<-0.4
young<-0.3
midage<-0.2
ds[, AGE1:= as.integer(AGE_AT_MID_C=='15-24')]
ds[, AGE2:= as.integer(AGE_AT_MID_C=='25-34')]
ds[, MALE:= as.integer(SEX=='M')]
ds[,LOGIT_P_SEQ:=a + comm[COMM_NUM_B] + male*MALE + young*AGE1 + midage*AGE2]
ds[,P_SEQ:=exp(LOGIT_P_SEQ)/(1+exp(LOGIT_P_SEQ))]
ds[,SUC:=rbinom(nrow(ds),TRIAL,P_SEQ)]
ds[,CATEGORY:=paste0(COMM_NUM_B,':',SEX,':',AGE_AT_MID_C)]
ds[,COMM_NUM_B:=as.integer(COMM_NUM_B)]
dobs<-as.data.table(expand.grid(TR_TRM_CATEGORY=ds$CATEGORY,REC_TRM_CATEGORY=ds$CATEGORY))
dobs[, c("TR_COMM_NUM_B","TR_SEX", "TR_AGE_AT_MID_C") := tstrsplit(TR_TRM_CATEGORY, ":", fixed=TRUE)]
dobs[, c("REC_COMM_NUM_B","REC_SEX", "REC_AGE_AT_MID_C") := tstrsplit(REC_TRM_CATEGORY, ":", fixed=TRUE)]
dobs<-dobs[TR_SEX!=REC_SEX,]
dobs[,TRM_CAT_PAIR_ID:=seq_len(nrow(dobs))]
lbd   <- rnorm(nrow(dobs),2,0.2)
tmp   <- dobs[TR_COMM_NUM_B!=REC_COMM_NUM_B,TRM_CAT_PAIR_ID]
lbd[tmp]  <- rnorm(length(tmp),1,0.2)
tmp   <- dobs[TR_COMM_NUM_B==REC_COMM_NUM_B & TR_SEX=='M' &
( (TR_AGE_AT_MID_C=='15-24' & REC_AGE_AT_MID_C=='25-34')|
(TR_AGE_AT_MID_C=='25-34' & REC_AGE_AT_MID_C=='35+')|
(TR_AGE_AT_MID_C=='15-24' & REC_AGE_AT_MID_C=='35+') ),TRM_CAT_PAIR_ID]
lbd[tmp]  <- rnorm(length(tmp),1,0.2)
tmp   <- dobs[TR_COMM_NUM_B==REC_COMM_NUM_B & TR_SEX=='F' &
( (TR_AGE_AT_MID_C=='25-34' & REC_AGE_AT_MID_C=='15-24')|
(TR_AGE_AT_MID_C=='35+' & REC_AGE_AT_MID_C=='15-24')|
(TR_AGE_AT_MID_C=='35+' & REC_AGE_AT_MID_C=='25-34') ),TRM_CAT_PAIR_ID]
lbd[tmp]  <- rnorm(length(tmp),1,0.2)
TRUE_PI<-lbd/sum(lbd)
dobs[,TRUE_PI:=as.vector(TRUE_PI)]
tmp<-subset(ds,select=c('CATEGORY','P_SEQ'))
setnames(tmp,colnames(tmp),paste0('TR_TRM_',colnames(tmp)))
dobs<-merge(dobs,tmp,by='TR_TRM_CATEGORY')
setnames(tmp,colnames(tmp),gsub('TR_','REC_',colnames(tmp)))
dobs<-merge(dobs,tmp,by='REC_TRM_CATEGORY')
dobs[, S:= TR_TRM_P_SEQ * REC_TRM_P_SEQ]
N<-rpois(1,300/mean(dobs$S))
z<-rmultinom(1,size=N,prob=TRUE_PI)
n<-matrix(NA_integer_,ncol=1,nrow=length(TRUE_PI))
for (i in 1:length(TRUE_PI)){
n[i]<-rbinom(1,size=z[i],dobs$S[i])
}
dobs[, TRM_OBS:= n]
dobs.obs.zero<-which(dobs$TRM_OBS==0)
dobs<-dobs[TRM_OBS!=0,]
dobs[, TRM_CAT_PAIR_ID:= seq_len(nrow(dobs))]
# remove irrelevant terms
set(ds,NULL,c('P_SEQ','LOGIT_P_SEQ'),NULL)
set(dobs,NULL,c('TR_TRM_P_SEQ','REC_TRM_P_SEQ','S','TRUE_PI',
'TR_COMM_NUM_B', 'TR_SEX', 'TR_AGE_AT_MID_C', 'REC_COMM_NUM_B', 'REC_SEX',
'REC_AGE_AT_MID_C'),NULL)
dobs[,TR_SAMPLING_CATEGORY:=TR_TRM_CATEGORY]
dobs[,REC_SAMPLING_CATEGORY:=REC_TRM_CATEGORY]
library(rstan)
library(bayesplot)
infile.sequencing.stan.model<-'glm_age3sex2comm2bin.stan'
#	run STAN
tmp			<- as.list(subset(ds,select=c('COMM_NUM_B','TRIAL','SUC','MALE','AGE1','AGE2')))
tmp$N		<- nrow(ds)
tmp$N_COMM	<- length(unique(ds$COMM_NUM_B))
fit.par 	<- stan(	file = infile.sequencing.stan.model,
data = tmp,
iter = 10e3,
warmup = 5e2,
cores = 1,
chains = 1,
init = list(list(a=0, comm=rep(0,2), sig_comm=1, male=0, age1=0, age2=0)))
fit.pars	<- c('a','comm','sig_comm','male','age1','age2')
any(rhat(fit.par, pars=fit.pars)>1.02)
any(neff_ratio(fit.par, pars=fit.pars) * 9.5e3 < 500)
po              <- as.matrix(fit.par)
po              <- po[, colnames(po)[!grepl('p_suc|lp__',colnames(po))]]
p   <- mcmc_trace(po, pars=colnames(po), facet_args = list(ncol = 1))
pdf(file='190327_participation_model_marginaltraces.pdf', w=7, h=100)
p
dev.off()
nprior  <- 1000
set.seed(42)
dprior   <- data.table(CATEGORY=unique(c(dobs$TR_TRM_CATEGORY,dobs$REC_TRM_CATEGORY)))
dprior[, COMM_NUM_B:= dprior[, gsub('^(.+)\\:(.)\\:(.+)$','\\1',CATEGORY)]]
dprior[, SEX:= dprior[,gsub('^(.+)\\:(.)\\:(.+)','\\2',CATEGORY)]]
dprior[, AGE_AT_MID_C:= dprior[, gsub('^(.+)\\:(.)\\:(.+)$','\\3',CATEGORY)]]
dprior[, AGE1:= as.integer(AGE_AT_MID_C=='15-24')]
dprior[, AGE2:= as.integer(AGE_AT_MID_C=='25-34')]
dprior[, MALE:= as.integer(SEX=='M')]
dprior[, COMM_NUM_B:=as.integer(COMM_NUM_B)]
fit.e		<- extract(fit.par)
tmp			<- sample(length(fit.e$a), nprior)
dprior			<- dprior[,
{
z<- with(fit.e, a + comm[,COMM_NUM_B] + male * MALE +
age1 * AGE1 + age2 * AGE2)
list(SAMPLE=1:nprior, ETA=as.numeric(z[tmp]))
},
by=c('CATEGORY')]
dprior[, P:= exp(ETA)/(1+exp(ETA))]
require(bde)
tmp	<- dprior[, {
bdest<- bde(P, dataPointsCache=sort(P), b=0.001, estimator='betakernel', lower.limit=0, upper.limit=1,
options=list(modified=FALSE, normalization='densitywise', mbc='none', c=0.5))
list(SAMPLE=SAMPLE, LP=log(density(bdest, P)))
}, by='CATEGORY']
dprior	<- merge(dprior, tmp, by=c('CATEGORY','SAMPLE'))
set(dprior, NULL, c('ETA'), NULL)
mcmc.file<-'S1MCMC_GLM.rda'
dobs
getwd()
mcmc.file<-'S1MCMC_GLM.rda'
control=list(seed=42, mcmc.n=4*1e5, verbose=0, outfile=mcmc.file)
source.attribution.mcmc(dobs, dprior, control)
dobs$TR_SAMPLING_CATEGORY
dprior$SAMPLING_CATEGORY
dprior
mcmc.file<-'S1MCMC_GLM.rda'
load(mcmc.file)
aggregate.file	<- gsub('\\.rda','_aggregatedFishInland.csv',mcmc.file)
daggregateTo	<- subset(dobs, select=c(TRM_CAT_PAIR_ID, TR_TRM_CATEGORY, REC_TRM_CATEGORY))
aggregate.file
aggregate.file	<- gsub('\\.rda','_aggregatedCommunity.csv',mcmc.file)
daggregateTo	<- subset(dobs, select=c(TRM_CAT_PAIR_ID, TR_TRM_CATEGORY, REC_TRM_CATEGORY))
daggregateTo[, TR_TARGETCAT:=dobs[, gsub('^(.+)\\:(.)\\:(.+)$','\\1',TR_CATEGORY)]]
daggregateTo[, REC_TARGETCAT:=dobs[, gsub('^(.+)\\:(.)\\:(.+)$','\\1',REC_CATEGORY)]]
dobs
daggregateTo[, TR_TRM_TARGETCAT:=dobs[, gsub('^(.+)\\:(.)\\:(.+)$','\\1',TR_TRM_CATEGORY)]]
daggregateTo[, REC_TRM_TARGETCAT:=dobs[, gsub('^(.+)\\:(.)\\:(.+)$','\\1',REC_TRM_CATEGORY)]]
daggregateTo
aggregate.file	<- gsub('\\.rda','_aggregatedCommunity.csv',mcmc.file)
daggregateTo	<- subset(dobs, select=c(TRM_CAT_PAIR_ID, TR_TRM_CATEGORY, REC_TRM_CATEGORY))
daggregateTo[, TR_TRM_TARGETCAT:=dobs[, gsub('^(.+)\\:(.)\\:(.+)$','\\1',TR_TRM_CATEGORY)]]
daggregateTo[, REC_TRM_TARGETCAT:=dobs[, gsub('^(.+)\\:(.)\\:(.+)$','\\1',REC_TRM_CATEGORY)]]
set(daggregateTo, NULL, c('TR_TRM_CATEGORY','REC_TRM_CATEGORY'), NULL)
daggregateTo
control			<- list(	burnin.p=0.05,
thin=NA_integer_,
regex_pars='*',
outfile=aggregate.file)
source.attribution.mcmc.aggregateToTarget(mcmc.file, daggregateTo, control=control)
library(data.table)
library(gtools)
library(TransSubpopulation)
# library(TransSubpopulation)
set.seed(42)
num.inf.1<-2000
num.inf.2<-2500
ds<-data.table(COMM_NUM_B=c(rep(1,num.inf.1),rep(2,num.inf.2)),INF=rep(1,num.inf.1+num.inf.2))
num.f.1<-round(num.inf.1*0.7)
num.m.1<-num.inf.1-round(num.inf.1*0.7)
num.f.2<-round(num.inf.2*0.6)
num.m.2<-num.inf.2-round(num.inf.2*0.6)
ds$SEX<-c(rep('F',num.f.1),
rep('M',num.m.1),
rep('F',num.f.2),
rep('M',num.m.2))
ds$AGE_AT_MID_C<-c(rep('15-24',round(num.f.1*0.25)),
rep('25-34',round(num.f.1*0.6)),
rep('35+',num.f.1-round(num.f.1*0.25)-round(num.f.1*0.6)),
rep('15-24',round(num.m.1*0.2)),
rep('25-34',round(num.m.1*0.5)),
rep('35+',num.m.1-round(num.m.1*0.2)-round(num.m.1*0.5)),
rep('15-24',round(num.f.2*0.25)),
rep('25-34',round(num.f.2*0.5)),
rep('35+',num.f.2-round(num.f.2*0.25)-round(num.f.2*0.5)),
rep('15-24',round(num.m.2*0.2)),
rep('25-34',round(num.m.2*0.4)),
rep('35+',num.m.2-round(num.m.2*0.2)-round(num.m.2*0.4))
)
ds		<- ds[, list(TRIAL=length(INF)),by=c('AGE_AT_MID_C','SEX','COMM_NUM_B')]
comm<-c(0.5,-0.5)
a<-0.4
male<-0.4
young<-0.3
midage<-0.2
ds[, AGE1:= as.integer(AGE_AT_MID_C=='15-24')]
ds[, AGE2:= as.integer(AGE_AT_MID_C=='25-34')]
ds[, MALE:= as.integer(SEX=='M')]
ds[,LOGIT_P_SEQ:=a + comm[COMM_NUM_B] + male*MALE + young*AGE1 + midage*AGE2]
ds[,P_SEQ:=exp(LOGIT_P_SEQ)/(1+exp(LOGIT_P_SEQ))]
ds[,SUC:=rbinom(nrow(ds),TRIAL,P_SEQ)]
ds[,CATEGORY:=paste0(COMM_NUM_B,':',SEX,':',AGE_AT_MID_C)]
ds[,COMM_NUM_B:=as.integer(COMM_NUM_B)]
dobs<-as.data.table(expand.grid(TR_TRM_CATEGORY=ds$CATEGORY,REC_TRM_CATEGORY=ds$CATEGORY))
dobs[, c("TR_COMM_NUM_B","TR_SEX", "TR_AGE_AT_MID_C") := tstrsplit(TR_TRM_CATEGORY, ":", fixed=TRUE)]
dobs[, c("REC_COMM_NUM_B","REC_SEX", "REC_AGE_AT_MID_C") := tstrsplit(REC_TRM_CATEGORY, ":", fixed=TRUE)]
dobs<-dobs[TR_SEX!=REC_SEX,]
dobs[,TRM_CAT_PAIR_ID:=seq_len(nrow(dobs))]
lbd   <- rnorm(nrow(dobs),2,0.2)
tmp   <- dobs[TR_COMM_NUM_B!=REC_COMM_NUM_B,TRM_CAT_PAIR_ID]
lbd[tmp]  <- rnorm(length(tmp),1,0.2)
tmp   <- dobs[TR_COMM_NUM_B==REC_COMM_NUM_B & TR_SEX=='M' &
( (TR_AGE_AT_MID_C=='15-24' & REC_AGE_AT_MID_C=='25-34')|
(TR_AGE_AT_MID_C=='25-34' & REC_AGE_AT_MID_C=='35+')|
(TR_AGE_AT_MID_C=='15-24' & REC_AGE_AT_MID_C=='35+') ),TRM_CAT_PAIR_ID]
lbd[tmp]  <- rnorm(length(tmp),1,0.2)
tmp   <- dobs[TR_COMM_NUM_B==REC_COMM_NUM_B & TR_SEX=='F' &
( (TR_AGE_AT_MID_C=='25-34' & REC_AGE_AT_MID_C=='15-24')|
(TR_AGE_AT_MID_C=='35+' & REC_AGE_AT_MID_C=='15-24')|
(TR_AGE_AT_MID_C=='35+' & REC_AGE_AT_MID_C=='25-34') ),TRM_CAT_PAIR_ID]
lbd[tmp]  <- rnorm(length(tmp),1,0.2)
TRUE_PI<-lbd/sum(lbd)
dobs[,TRUE_PI:=as.vector(TRUE_PI)]
DOBS
dobs
dobs[,sum(TRUE_PI),by=c('TR_COMM_NUM_B','REC_COMM_NUM_B')]
dobs[,TRUE_PI=sum(TRUE_PI),by=c('TR_COMM_NUM_B','REC_COMM_NUM_B')]
dobs[,TRUE_PI:=sum(TRUE_PI),by=c('TR_COMM_NUM_B','REC_COMM_NUM_B')]
dobs
lbd   <- rnorm(nrow(dobs),2,0.2)
tmp   <- dobs[TR_COMM_NUM_B!=REC_COMM_NUM_B,TRM_CAT_PAIR_ID]
lbd[tmp]  <- rnorm(length(tmp),1,0.2)
tmp   <- dobs[TR_COMM_NUM_B==REC_COMM_NUM_B & TR_SEX=='M' &
( (TR_AGE_AT_MID_C=='15-24' & REC_AGE_AT_MID_C=='25-34')|
(TR_AGE_AT_MID_C=='25-34' & REC_AGE_AT_MID_C=='35+')|
(TR_AGE_AT_MID_C=='15-24' & REC_AGE_AT_MID_C=='35+') ),TRM_CAT_PAIR_ID]
lbd[tmp]  <- rnorm(length(tmp),1,0.2)
tmp   <- dobs[TR_COMM_NUM_B==REC_COMM_NUM_B & TR_SEX=='F' &
( (TR_AGE_AT_MID_C=='25-34' & REC_AGE_AT_MID_C=='15-24')|
(TR_AGE_AT_MID_C=='35+' & REC_AGE_AT_MID_C=='15-24')|
(TR_AGE_AT_MID_C=='35+' & REC_AGE_AT_MID_C=='25-34') ),TRM_CAT_PAIR_ID]
lbd[tmp]  <- rnorm(length(tmp),1,0.2)
TRUE_PI<-lbd/sum(lbd)
dobs[,TRUE_PI:=as.vector(TRUE_PI)]
dobs
dobs[,sum(TRUE_PI),by=c('TR_COMM_NUM_B','REC_COMM_NUM_B')]
rep(c(1,2,3,4),3)
daggregateTo
dobs
library(data.table)
library(gtools)
library(TransSubpopulation)
# library(TransSubpopulation)
set.seed(42)
num.inf.1<-2000
num.inf.2<-2500
ds<-data.table(COMM_NUM_B=c(rep(1,num.inf.1),rep(2,num.inf.2)),INF=rep(1,num.inf.1+num.inf.2))
num.f.1<-round(num.inf.1*0.7)
num.m.1<-num.inf.1-round(num.inf.1*0.7)
num.f.2<-round(num.inf.2*0.6)
num.m.2<-num.inf.2-round(num.inf.2*0.6)
ds$SEX<-c(rep('F',num.f.1),
rep('M',num.m.1),
rep('F',num.f.2),
rep('M',num.m.2))
ds$AGE_AT_MID_C<-c(rep('15-24',round(num.f.1*0.25)),
rep('25-34',round(num.f.1*0.6)),
rep('35+',num.f.1-round(num.f.1*0.25)-round(num.f.1*0.6)),
rep('15-24',round(num.m.1*0.2)),
rep('25-34',round(num.m.1*0.5)),
rep('35+',num.m.1-round(num.m.1*0.2)-round(num.m.1*0.5)),
rep('15-24',round(num.f.2*0.25)),
rep('25-34',round(num.f.2*0.5)),
rep('35+',num.f.2-round(num.f.2*0.25)-round(num.f.2*0.5)),
rep('15-24',round(num.m.2*0.2)),
rep('25-34',round(num.m.2*0.4)),
rep('35+',num.m.2-round(num.m.2*0.2)-round(num.m.2*0.4))
)
ds		<- ds[, list(TRIAL=length(INF)),by=c('AGE_AT_MID_C','SEX','COMM_NUM_B')]
comm<-c(0.5,-0.5)
a<-0.4
male<-0.4
young<-0.3
midage<-0.2
ds[, AGE1:= as.integer(AGE_AT_MID_C=='15-24')]
ds[, AGE2:= as.integer(AGE_AT_MID_C=='25-34')]
ds[, MALE:= as.integer(SEX=='M')]
ds[,LOGIT_P_SEQ:=a + comm[COMM_NUM_B] + male*MALE + young*AGE1 + midage*AGE2]
ds[,P_SEQ:=exp(LOGIT_P_SEQ)/(1+exp(LOGIT_P_SEQ))]
ds[,SUC:=rbinom(nrow(ds),TRIAL,P_SEQ)]
ds[,CATEGORY:=paste0(COMM_NUM_B,':',SEX,':',AGE_AT_MID_C)]
ds[,COMM_NUM_B:=as.integer(COMM_NUM_B)]
dobs<-as.data.table(expand.grid(TR_TRM_CATEGORY=ds$CATEGORY,REC_TRM_CATEGORY=ds$CATEGORY))
dobs[, c("TR_COMM_NUM_B","TR_SEX", "TR_AGE_AT_MID_C") := tstrsplit(TR_TRM_CATEGORY, ":", fixed=TRUE)]
dobs[, c("REC_COMM_NUM_B","REC_SEX", "REC_AGE_AT_MID_C") := tstrsplit(REC_TRM_CATEGORY, ":", fixed=TRUE)]
dobs<-dobs[TR_SEX!=REC_SEX,]
dobs[,TRM_CAT_PAIR_ID:=seq_len(nrow(dobs))]
lbd   <- rnorm(nrow(dobs),2,0.2)
tmp   <- dobs[TR_COMM_NUM_B!=REC_COMM_NUM_B,TRM_CAT_PAIR_ID]
lbd[tmp]  <- rnorm(length(tmp),1,0.2)
tmp   <- dobs[TR_COMM_NUM_B==REC_COMM_NUM_B & TR_SEX=='M' &
( (TR_AGE_AT_MID_C=='15-24' & REC_AGE_AT_MID_C=='25-34')|
(TR_AGE_AT_MID_C=='25-34' & REC_AGE_AT_MID_C=='35+')|
(TR_AGE_AT_MID_C=='15-24' & REC_AGE_AT_MID_C=='35+') ),TRM_CAT_PAIR_ID]
lbd[tmp]  <- rnorm(length(tmp),1,0.2)
tmp   <- dobs[TR_COMM_NUM_B==REC_COMM_NUM_B & TR_SEX=='F' &
( (TR_AGE_AT_MID_C=='25-34' & REC_AGE_AT_MID_C=='15-24')|
(TR_AGE_AT_MID_C=='35+' & REC_AGE_AT_MID_C=='15-24')|
(TR_AGE_AT_MID_C=='35+' & REC_AGE_AT_MID_C=='25-34') ),TRM_CAT_PAIR_ID]
lbd[tmp]  <- rnorm(length(tmp),1,0.2)
TRUE_PI<-lbd/sum(lbd)
dobs[,TRUE_PI:=as.vector(TRUE_PI)]
tmp<-dobs[,sum(TRUE_PI),by=c('TR_COMM_NUM_B','REC_COMM_NUM_B')]
setkey(tmp,TR_COMM_NUM_B,REC_COMM_NUM_B)
TRUE_PI<-tmp$V1
tmp<-subset(ds,select=c('CATEGORY','P_SEQ'))
setnames(tmp,colnames(tmp),paste0('TR_TRM_',colnames(tmp)))
dobs<-merge(dobs,tmp,by='TR_TRM_CATEGORY')
setnames(tmp,colnames(tmp),gsub('TR_','REC_',colnames(tmp)))
dobs<-merge(dobs,tmp,by='REC_TRM_CATEGORY')
dobs[, S:= TR_TRM_P_SEQ * REC_TRM_P_SEQ]
dobs
N<-rpois(1,300/mean(dobs$S))
z<-rmultinom(1,size=N,prob=TRUE_PI)
n<-matrix(NA_integer_,ncol=1,nrow=length(TRUE_PI))
for (i in 1:length(TRUE_PI)){
n[i]<-rbinom(1,size=z[i],dobs$S[i])
}
dobs[, TRM_OBS:= n]
dobs.obs.zero<-which(dobs$TRM_OBS==0)
dobs<-dobs[TRM_OBS!=0,]
dobs[, TRM_CAT_PAIR_ID:= seq_len(nrow(dobs))]
# remove irrelevant terms
set(ds,NULL,c('P_SEQ','LOGIT_P_SEQ'),NULL)
set(dobs,NULL,c('TR_TRM_P_SEQ','REC_TRM_P_SEQ','S','TRUE_PI',
'TR_COMM_NUM_B', 'TR_SEX', 'TR_AGE_AT_MID_C', 'REC_COMM_NUM_B', 'REC_SEX',
'REC_AGE_AT_MID_C'),NULL)
dobs
library(data.table)
library(gtools)
library(TransSubpopulation)
# library(TransSubpopulation)
set.seed(42)
num.inf.1<-2000
num.inf.2<-2500
ds<-data.table(COMM_NUM_B=c(rep(1,num.inf.1),rep(2,num.inf.2)),INF=rep(1,num.inf.1+num.inf.2))
num.f.1<-round(num.inf.1*0.7)
num.m.1<-num.inf.1-round(num.inf.1*0.7)
num.f.2<-round(num.inf.2*0.6)
num.m.2<-num.inf.2-round(num.inf.2*0.6)
ds$SEX<-c(rep('F',num.f.1),
rep('M',num.m.1),
rep('F',num.f.2),
rep('M',num.m.2))
ds$AGE_AT_MID_C<-c(rep('15-24',round(num.f.1*0.25)),
rep('25-34',round(num.f.1*0.6)),
rep('35+',num.f.1-round(num.f.1*0.25)-round(num.f.1*0.6)),
rep('15-24',round(num.m.1*0.2)),
rep('25-34',round(num.m.1*0.5)),
rep('35+',num.m.1-round(num.m.1*0.2)-round(num.m.1*0.5)),
rep('15-24',round(num.f.2*0.25)),
rep('25-34',round(num.f.2*0.5)),
rep('35+',num.f.2-round(num.f.2*0.25)-round(num.f.2*0.5)),
rep('15-24',round(num.m.2*0.2)),
rep('25-34',round(num.m.2*0.4)),
rep('35+',num.m.2-round(num.m.2*0.2)-round(num.m.2*0.4))
)
ds		<- ds[, list(TRIAL=length(INF)),by=c('AGE_AT_MID_C','SEX','COMM_NUM_B')]
comm<-c(0.5,-0.5)
a<-0.4
male<-0.4
young<-0.3
midage<-0.2
ds[, AGE1:= as.integer(AGE_AT_MID_C=='15-24')]
ds[, AGE2:= as.integer(AGE_AT_MID_C=='25-34')]
ds[, MALE:= as.integer(SEX=='M')]
ds[,LOGIT_P_SEQ:=a + comm[COMM_NUM_B] + male*MALE + young*AGE1 + midage*AGE2]
ds[,P_SEQ:=exp(LOGIT_P_SEQ)/(1+exp(LOGIT_P_SEQ))]
ds[,SUC:=rbinom(nrow(ds),TRIAL,P_SEQ)]
ds[,CATEGORY:=paste0(COMM_NUM_B,':',SEX,':',AGE_AT_MID_C)]
ds[,COMM_NUM_B:=as.integer(COMM_NUM_B)]
dobs<-as.data.table(expand.grid(TR_TRM_CATEGORY=ds$CATEGORY,REC_TRM_CATEGORY=ds$CATEGORY))
dobs[, c("TR_COMM_NUM_B","TR_SEX", "TR_AGE_AT_MID_C") := tstrsplit(TR_TRM_CATEGORY, ":", fixed=TRUE)]
dobs[, c("REC_COMM_NUM_B","REC_SEX", "REC_AGE_AT_MID_C") := tstrsplit(REC_TRM_CATEGORY, ":", fixed=TRUE)]
dobs<-dobs[TR_SEX!=REC_SEX,]
dobs[,TRM_CAT_PAIR_ID:=seq_len(nrow(dobs))]
dobs
lbd   <- rnorm(nrow(dobs),2,0.2)
tmp   <- dobs[TR_COMM_NUM_B!=REC_COMM_NUM_B,TRM_CAT_PAIR_ID]
lbd[tmp]  <- rnorm(length(tmp),1,0.2)
tmp   <- dobs[TR_COMM_NUM_B==REC_COMM_NUM_B & TR_SEX=='M' &
( (TR_AGE_AT_MID_C=='15-24' & REC_AGE_AT_MID_C=='25-34')|
(TR_AGE_AT_MID_C=='25-34' & REC_AGE_AT_MID_C=='35+')|
(TR_AGE_AT_MID_C=='15-24' & REC_AGE_AT_MID_C=='35+') ),TRM_CAT_PAIR_ID]
lbd[tmp]  <- rnorm(length(tmp),1,0.2)
tmp   <- dobs[TR_COMM_NUM_B==REC_COMM_NUM_B & TR_SEX=='F' &
( (TR_AGE_AT_MID_C=='25-34' & REC_AGE_AT_MID_C=='15-24')|
(TR_AGE_AT_MID_C=='35+' & REC_AGE_AT_MID_C=='15-24')|
(TR_AGE_AT_MID_C=='35+' & REC_AGE_AT_MID_C=='25-34') ),TRM_CAT_PAIR_ID]
lbd[tmp]  <- rnorm(length(tmp),1,0.2)
TRUE_PI<-lbd/sum(lbd)
dobs[,TRUE_PI:=as.vector(TRUE_PI)]
dobs
tmp<-dobs[,sum(TRUE_PI),by=c('TR_COMM_NUM_B','REC_COMM_NUM_B')]
setkey(tmp,TR_COMM_NUM_B,REC_COMM_NUM_B)
TRUE_PI<-tmp$V1
TRUE_PI
da<-as.data.table(read.csv('S1MCMC_GLM_aggregatedCommunity_flowsetc.csv'))
da
require(bde)
?bde
?sort
?bde
bdest<- bde(P, dataPointsCache=sort(P), b=0.001, estimator='betakernel', lower.limit=0, upper.limit=1, options=list(modified=FALSE, normalization='densitywise', mbc='none', c=0.5))
da
library(TransSubpopulation)
library(TransSubpopulation)
library(TransSubpopulation)
library(pkgdown)
build_site()
build_site()
library(TransSubpopulation)
library(pkgdown)
build_site()
library(data.table)
library(gtools)
setwd("~/Desktop/phyloscanner.utility/finalisedcode190405/simulation_glm")
set.seed(42)
num.inf<-4000
num.inf.1<-round(num.inf*0.4)
num.inf.2<-num.inf-num.inf.1
ds<-data.table(COMM_NUM_B=c(rep(1,num.inf.1),rep(2,num.inf.2)),INF=rep(1,num.inf.1+num.inf.2))
num.f.1<-round(num.inf.1*0.7)
num.m.1<-num.inf.1-round(num.inf.1*0.7)
num.f.2<-round(num.inf.2*0.6)
num.m.2<-num.inf.2-round(num.inf.2*0.6)
ds$SEX<-c(rep('F',num.f.1),
rep('M',num.m.1),
rep('F',num.f.2),
rep('M',num.m.2))
ds$AGE_AT_MID_C<-c(rep('15-24',round(num.f.1*0.25)),
rep('25-34',round(num.f.1*0.6)),
rep('35+',num.f.1-round(num.f.1*0.25)-round(num.f.1*0.6)),
rep('15-24',round(num.m.1*0.2)),
rep('25-34',round(num.m.1*0.5)),
rep('35+',num.m.1-round(num.m.1*0.2)-round(num.m.1*0.5)),
rep('15-24',round(num.f.2*0.25)),
rep('25-34',round(num.f.2*0.5)),
rep('35+',num.f.2-round(num.f.2*0.25)-round(num.f.2*0.5)),
rep('15-24',round(num.m.2*0.2)),
rep('25-34',round(num.m.2*0.4)),
rep('35+',num.m.2-round(num.m.2*0.2)-round(num.m.2*0.4))
)
ds		<- ds[, list(TRIAL=length(INF)),by=c('AGE_AT_MID_C','SEX','COMM_NUM_B')]
comm<-c(0.5,-0.5)
a<-0.4
male<-0.4
young<-0.3
midage<-0.2
ds[, AGE1:= as.integer(AGE_AT_MID_C=='15-24')]
ds[, AGE2:= as.integer(AGE_AT_MID_C=='25-34')]
ds[, MALE:= as.integer(SEX=='M')]
ds[,LOGIT_P_SEQ:=a + comm[COMM_NUM_B] + male*MALE + young*AGE1 + midage*AGE2]
ds[,P_SEQ:=exp(LOGIT_P_SEQ)/(1+exp(LOGIT_P_SEQ))]
ds[,SUC:=rbinom(nrow(ds),TRIAL,P_SEQ)]
ds[,CATEGORY:=paste0(COMM_NUM_B,':',SEX,':',AGE_AT_MID_C)]
ds[,COMM_NUM_B:=as.integer(COMM_NUM_B)]
dobs<-as.data.table(expand.grid(TR_TRM_CATEGORY=ds$CATEGORY,REC_TRM_CATEGORY=ds$CATEGORY))
dobs[, c("TR_COMM_NUM_B","TR_SEX", "TR_AGE_AT_MID_C") := tstrsplit(TR_TRM_CATEGORY, ":", fixed=TRUE)]
dobs[, c("REC_COMM_NUM_B","REC_SEX", "REC_AGE_AT_MID_C") := tstrsplit(REC_TRM_CATEGORY, ":", fixed=TRUE)]
dobs<-dobs[TR_SEX!=REC_SEX,]
dobs[, TRM_CAT_PAIR_ID:= seq_len(nrow(dobs))]
lbd   <- rnorm(nrow(dobs),2,0.2)
tmp   <- dobs[TR_COMM_NUM_B!=REC_COMM_NUM_B,TRM_CAT_PAIR_ID]
lbd[tmp]  <- rnorm(length(tmp),1,0.2)
tmp   <- dobs[TR_COMM_NUM_B==REC_COMM_NUM_B & TR_SEX=='M' &
( (TR_AGE_AT_MID_C=='15-24' & REC_AGE_AT_MID_C=='25-34')|
(TR_AGE_AT_MID_C=='25-34' & REC_AGE_AT_MID_C=='35+')|
(TR_AGE_AT_MID_C=='15-24' & REC_AGE_AT_MID_C=='35+') ),TRM_CAT_PAIR_ID]
lbd[tmp]  <- rnorm(length(tmp),1,0.2)
tmp   <- dobs[TR_COMM_NUM_B==REC_COMM_NUM_B & TR_SEX=='F' &
( (TR_AGE_AT_MID_C=='25-34' & REC_AGE_AT_MID_C=='15-24')|
(TR_AGE_AT_MID_C=='35+' & REC_AGE_AT_MID_C=='15-24')|
(TR_AGE_AT_MID_C=='35+' & REC_AGE_AT_MID_C=='25-34') ),TRM_CAT_PAIR_ID]
lbd[tmp]  <- rnorm(length(tmp),1,0.2)
TRUE_PI<-lbd/sum(lbd)
dobs[,TRUE_PI:=as.vector(TRUE_PI)]
dobs
library(TransSubpopulation)
build_site()
library(pkgdown)
build_site()
library(pkgdown)
library(TransSubpopulation)
build_site()
build_site()
library(TransSubpopulation)
build_site()
